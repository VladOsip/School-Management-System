<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gu.Wpf.DataGrid2D</name>
    </assembly>
    <members>
        <member name="T:Gu.Wpf.DataGrid2D.Cell">
            <summary>
            Exposes attached properties for <see cref="T:System.Windows.Controls.DataGrid"/> cells.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Cell.TemplateProperty">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> to use when rendering cell contents.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Cell.TemplateSelectorProperty">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> to use when rendering cell contents.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateProperty">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> to use when editing cell contents.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateSelectorProperty">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"/> to use when editing cell contents.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.SetTemplate(System.Windows.Controls.DataGrid,System.Windows.DataTemplate)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateProperty"/> on.</param>
            <param name="value">Template property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.GetTemplate(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateProperty"/> from.</param>
            <returns>Template property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.SetTemplateSelector(System.Windows.Controls.DataGrid,System.Windows.Controls.DataTemplateSelector)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateSelectorProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateSelectorProperty"/> on.</param>
            <param name="value">TemplateSelector property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.GetTemplateSelector(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateSelectorProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Cell.TemplateSelectorProperty"/> from.</param>
            <returns>TemplateSelector property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.SetEditingTemplate(System.Windows.Controls.DataGrid,System.Windows.DataTemplate)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateProperty"/> on.</param>
            <param name="value">EditingTemplate property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.GetEditingTemplate(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateProperty"/> from.</param>
            <returns>EditingTemplate property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.SetEditingTemplateSelector(System.Windows.DependencyObject,System.Windows.Controls.DataTemplateSelector)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateSelectorProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.DependencyObject"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateSelectorProperty"/> on.</param>
            <param name="value">EditingTemplateSelector property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Cell.GetEditingTemplateSelector(System.Windows.DependencyObject)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateSelectorProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.DependencyObject"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Cell.EditingTemplateSelectorProperty"/> from.</param>
            <returns>EditingTemplateSelector property value.</returns>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Index">
            <summary>
            Attached properties for specifying cell index.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Index.OfRowProperty">
            <summary>The of row property.</summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Index.StartAtProperty">
            <summary>The index of the first element, default is 0.</summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Index.GetOfRow(System.Windows.Controls.DataGridRow)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Index.OfRowProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGridRow"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Index.OfRowProperty"/> from.</param>
            <returns>OfRow property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Index.SetOfRow(System.Windows.Controls.DataGridRow,System.Int32)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Index.OfRowPropertyKey"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGridRow"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Index.OfRowPropertyKey"/> on.</param>
            <param name="value">OfRow property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Index.GetStartAt(System.Windows.Controls.Control)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Index.StartAtProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.Control"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Index.StartAtProperty"/> from.</param>
            <returns>StartAt property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Index.SetStartAt(System.Windows.Controls.Control,System.Nullable{System.Int32})">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Index.StartAtProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.Control"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Index.StartAtProperty"/> on.</param>
            <param name="value">StartAt property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DIndexPropertyDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DIndexPropertyDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.CellTemplateColumn.ClipboardContentBinding">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.CellTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.CellTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ColumnHeaderListener.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.IColumnsChanged">
            <summary>
            For types signaling column changes.
            </summary>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.IColumnsChanged.ColumnsChanged">
            <summary>
            The change event.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IColumnsChanged.DataGrid">
            <summary>
            Gets or sets the tracked <see cref="P:Gu.Wpf.DataGrid2D.IColumnsChanged.DataGrid"/>.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ListIndexPropertyDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ListIndexPropertyDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.NamePropertyDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowHeaderListener.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowsListener.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedPropertyDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedPropertyDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TypeExt.Implements(System.Type,System.Type,System.Type)">
            <summary>
            To check if type implements IEquatable{string}
            Call like this type.Implements(typeof(IEquatable{}, typeof(string)).
            </summary>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.ItemsSource">
            <summary>
            Attached properties for setting ItemsSource to 2D collections of different shapes.
            </summary>
            <summary>
            Attached properties for transposed two dimensional sources.
            </summary>
            <summary>
            Attached properties for column headers.
            </summary>
            <summary>
            Attached properties for setting columns.
            </summary>
            <summary>
            Attached properties for row headers.
            </summary>
            <summary>
            Attached properties for setting rows.
            </summary>
            <summary>
            Private helpers.
            </summary>
            <summary>
            Attached properties for transposed sources.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DProperty">
            <summary>For setting the <see cref="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty"/> to a two-dimensional array.</summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetArray2D(System.Windows.Controls.DataGrid,System.Array)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DProperty"/> on.</param>
            <param name="value">Array2D property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetArray2D(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DProperty"/> from.</param>
            <returns>Array2D property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DTransposedProperty">
            <summary>For setting the <see cref="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty"/> to a two-dimensional array.</summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetArray2DTransposed(System.Windows.Controls.DataGrid,System.Array)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DTransposedProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DTransposedProperty"/> on.</param>
            <param name="value">Array2DTransposed property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetArray2DTransposed(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DTransposedProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.Array2DTransposedProperty"/> from.</param>
            <returns>Array2DTransposed property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnHeadersSourceProperty">
            <summary>For setting column headers.</summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetColumnHeadersSource(System.Windows.Controls.DataGrid,System.Collections.IEnumerable)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnHeadersSourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnHeadersSourceProperty"/> on.</param>
            <param name="value">ColumnHeadersSource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetColumnHeadersSource(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnHeadersSourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnHeadersSourceProperty"/> from.</param>
            <returns>ColumnHeadersSource property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnsSourceProperty">
            <summary>
            An <see cref="T:System.Collections.IEnumerable"/> of columns where each row is an <see cref="T:System.Collections.IEnumerable"/> with the values.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetColumnsSource(System.Windows.Controls.DataGrid,System.Collections.IEnumerable)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnsSourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnsSourceProperty"/> on.</param>
            <param name="value">ColumnsSource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetColumnsSource(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnsSourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.ColumnsSourceProperty"/> from.</param>
            <returns>ColumnsSource property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.RowHeadersSourceProperty">
            <summary>
            An <see cref="T:System.Collections.IEnumerable"/> with values to display in the row headers.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetRowHeadersSource(System.Windows.Controls.DataGrid,System.Collections.IEnumerable)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowHeadersSourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowHeadersSourceProperty"/> on.</param>
            <param name="value">RowHeadersSource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetRowHeadersSource(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowHeadersSourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowHeadersSourceProperty"/> from.</param>
            <returns>RowHeadersSource property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.RowsSourceProperty">
            <summary>
            An <see cref="T:System.Collections.IEnumerable"/> of rows where each row is an <see cref="T:System.Collections.IEnumerable"/> with the values.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetRowsSource(System.Windows.Controls.DataGrid,System.Collections.IEnumerable)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowsSourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowsSourceProperty"/> on.</param>
            <param name="value">RowsSource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetRowsSource(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowsSourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.RowsSourceProperty"/> from.</param>
            <returns>RowsSource property value.</returns>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.TransposedSourceProperty">
            <summary>For setting the <see cref="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty"/> to a transposed collection.</summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.ItemsSource.PropertySourceProperty">
            <summary>The property source.</summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetTransposedSource(System.Windows.Controls.DataGrid,System.Collections.IEnumerable)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.TransposedSourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.TransposedSourceProperty"/> on.</param>
            <param name="value">TransposedSource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetTransposedSource(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.TransposedSourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.TransposedSourceProperty"/> from.</param>
            <returns>TransposedSource property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.SetPropertySource(System.Windows.DependencyObject,System.Object)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.PropertySourceProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.DependencyObject"/> to set <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.PropertySourceProperty"/> on.</param>
            <param name="value">PropertySource property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ItemsSource.GetPropertySource(System.Windows.DependencyObject)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.PropertySourceProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.DependencyObject"/> to read <see cref="F:Gu.Wpf.DataGrid2D.ItemsSource.PropertySourceProperty"/> from.</param>
            <returns>PropertySource property value.</returns>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.RowColumnIndex">
            <summary>
            For specifying a cell index.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.RowColumnIndex.None">
            <summary>
            No selection.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/> struct.
            </summary>
            <param name="row">The row index.</param>
            <param name="column">The column index.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.RowColumnIndex.Row">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.RowColumnIndex.Column">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.op_Equality(Gu.Wpf.DataGrid2D.RowColumnIndex,Gu.Wpf.DataGrid2D.RowColumnIndex)">
            <summary>Check if <paramref name="left"/> is equal to <paramref name="right"/>.</summary>
            <param name="left">The left <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</param>
            <param name="right">The right <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</param>
            <returns>True if <paramref name="left"/> is equal to <paramref name="right"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.op_Inequality(Gu.Wpf.DataGrid2D.RowColumnIndex,Gu.Wpf.DataGrid2D.RowColumnIndex)">
            <summary>Check if <paramref name="left"/> is not equal to <paramref name="right"/>.</summary>
            <param name="left">The left <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</param>
            <param name="right">The right <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</param>
            <returns>True if <paramref name="left"/> is not equal to <paramref name="right"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.Parse(System.String)">
            <summary>
            Parse a <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/> from <paramref name="text"/>.
            </summary>
            <param name="text">The text.</param>
            <returns>A <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.TryParse(System.String,Gu.Wpf.DataGrid2D.RowColumnIndex@)">
            <summary>
            Try parse a <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/> from <paramref name="text"/>.
            </summary>
            <param name="text">The text.</param>
            <param name="result">A <see cref="T:Gu.Wpf.DataGrid2D.RowColumnIndex"/>.</param>
            <returns>True if success.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.Equals(Gu.Wpf.DataGrid2D.RowColumnIndex)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndex.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.RowColumnIndexConverter">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndexConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndexConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowColumnIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Selected">
            <summary>
            Attached properties for selection.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Selected.CellItemProperty">
            <summary> The cell item property. </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Selected.IndexProperty">
            <summary> The index property. </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Selected.SetCellItem(System.Windows.Controls.DataGrid,System.Object)">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Selected.CellItemProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Selected.CellItemProperty"/> on.</param>
            <param name="value">CellItem property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Selected.GetCellItem(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Selected.CellItemProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Selected.CellItemProperty"/> from.</param>
            <returns>CellItem property value.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Selected.SetIndex(System.Windows.Controls.DataGrid,System.Nullable{Gu.Wpf.DataGrid2D.RowColumnIndex})">
            <summary>Helper for setting <see cref="F:Gu.Wpf.DataGrid2D.Selected.IndexProperty"/> on <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to set <see cref="F:Gu.Wpf.DataGrid2D.Selected.IndexProperty"/> on.</param>
            <param name="value">Index property value.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Selected.GetIndex(System.Windows.Controls.DataGrid)">
            <summary>Helper for getting <see cref="F:Gu.Wpf.DataGrid2D.Selected.IndexProperty"/> from <paramref name="element"/>.</summary>
            <param name="element"><see cref="T:System.Windows.Controls.DataGrid"/> to read <see cref="F:Gu.Wpf.DataGrid2D.Selected.IndexProperty"/> from.</param>
            <returns>Index property value.</returns>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Array2DRowView">
            <summary>
            A bindable representation for <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/>.
            </summary>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Array2DView">
            <summary>
            A bindable representation for <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/>.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.Count">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.IsFixedSize">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.Source">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.IsTransposed">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.Item(System.Int32)">
            <summary>
            Gets the row at <paramref name="index"/>.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.Create(System.Array)">
            <summary>
            Create an <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/> from <paramref name="source"/>.
            </summary>
            <param name="source">The <see cref="P:Gu.Wpf.DataGrid2D.Array2DView.Array"/>.</param>
            <returns>An <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.CreateTransposed(System.Array)">
            <summary>
            Create <see langword="abstract"/>transposed <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/> from <paramref name="source"/>.
            </summary>
            <param name="source">The <see cref="P:Gu.Wpf.DataGrid2D.Array2DView.Array"/>.</param>
            <returns>An <see cref="T:Gu.Wpf.DataGrid2D.Array2DView"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.GetEnumerator">
            <summary> Get the enumerator. </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Add(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Contains(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Clear">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#IndexOf(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Insert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#Remove(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Array2DView.System#Collections#IList#RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.IndexPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Lists2DViewBase">
            <summary>
            Bindable representation of an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Lists2DViewBase.NotifyCollectionResetEventArgs">
            <summary> Cached <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> for <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset"/>. </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Lists2DViewBase.CountPropertyChangedEventArgs">
            <summary> Cached <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> for Count. </summary>
        </member>
        <member name="F:Gu.Wpf.DataGrid2D.Lists2DViewBase.IndexerPropertyChangedEventArgs">
            <summary> Cached <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> for Item[]. </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.IEnumerable})">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.Lists2DViewBase"/> class.
            </summary>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.ColumnsChanged">
            <summary>
            Not sure how to best handle the situation when the number of columns changes.
            Testing to raise this event and refresh the ItemsSource binding in the DataGrid.
            Just adding a column would not play nice with explicit columns.
            This way will not be ideal for performance if it changes frequently
            </summary>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.Count">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#IsFixedSize">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#ICollection#SyncRoot">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#ICollection#IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.Gu#Wpf#DataGrid2D#IView2D#Source">
            <inheritdoc />
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.IsTransposed">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.Gu#Wpf#DataGrid2D#IColumnsChanged#DataGrid">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.Item(System.Int32)">
            <summary>
            Gets the row at <paramref name="index"/>.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.GetEnumerator">
            <summary> Get the enumerator. </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Add(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Contains(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Clear">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#IndexOf(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Insert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#Remove(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.System#Collections#IList#RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises a <see cref="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a <see cref="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.OnPropertyChanged(System.String)">
            <summary>
            Raises a <see cref="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.OnColumnsChanged">
            <summary>
            Raises a <see cref="E:Gu.Wpf.DataGrid2D.Lists2DViewBase.ColumnsChanged"/> event.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.AddRows(System.Int32,System.Int32)">
            <summary>Notifies that rows were added.</summary>
            <param name="newStartingIndex">The index of the first added row.</param>
            <param name="count">The number of added rows.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.CreateRow(System.Int32)">
            <summary>Create a <see cref="T:Gu.Wpf.DataGrid2D.ListRowView"/>.</summary>
            <param name="index">The index.</param>
            <returns>A <see cref="T:Gu.Wpf.DataGrid2D.ListRowView"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.RemoveRows(System.Int32,System.Int32)">
            <summary>Notifies that rows were added.</summary>
            <param name="oldStartingIndex">The index of the first removed row.</param>
            <param name="count">The number of removed rows.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.Dispose(System.Boolean)">
            <summary>
            Disposes of an <see cref="T:Gu.Wpf.DataGrid2D.Lists2DViewBase"/>.
            </summary>
            <remarks>
            Called from Dispose() with disposing=true, and from the finalizer (~Lists2DViewBase) with disposing=false.
            Guidelines:
            1. We may be called more than once: do nothing after the first call.
            2. Avoid throwing exceptions if disposing is false, i.e. if we're being finalized.
            </remarks>
            <param name="disposing">True if called from Dispose(), false if called from the finalizer.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DViewBase.ThrowIfDisposed">
            <summary>Throws <see cref="T:System.ObjectDisposedException"/> is this instance is disposed. </summary>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.RowView`1">
            <summary>
            A bindable representation for <typeparamref name="TSource"/>.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowView`1.#ctor(`0,System.Int32,System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.RowView`1"/> class.
            </summary>
            <param name="source">The <typeparamref name="TSource"/>.</param>
            <param name="index">The index.</param>
            <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.RowView`1.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.RowView`1.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowView`1.GetClassName">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowView`1.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.RowView`1.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.IView2D">
            <summary>
            A bindable view.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IView2D.Source">
            <summary>Gets the source collection.</summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.IView2D.IsTransposed">
            <summary>Gets a value indicating whether the source collection is transposed.</summary>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.ListRowView">
            <summary>
            A bindable view of a list row.
            </summary>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.ListRowView.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ListRowView.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ListRowView.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.ListRowView.OnPropertyChanged(System.String)">
            <summary>Raises the <see cref="E:Gu.Wpf.DataGrid2D.ListRowView.PropertyChanged"/> event.</summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Lists2DTransposedView">
            <summary>
            A bindable view of a transposed list.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DTransposedView.#ctor(System.Collections.Generic.IEnumerable{System.Collections.IEnumerable})">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.Lists2DTransposedView"/> class.
            </summary>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DTransposedView.IsTransposed">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DTransposedView.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DTransposedView.CreateRow(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.Lists2DView">
            <summary>
            A bindable view of a list.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DView.#ctor(System.Collections.Generic.IEnumerable{System.Collections.IEnumerable})">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.Lists2DView"/> class.
            </summary>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.Lists2DView.IsTransposed">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DView.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.Lists2DView.CreateRow(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.TransposedItemsSource">
            <summary>
            A transposed source.
            </summary>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Gu.Wpf.DataGrid2D.TransposedItemsSource"/> class.
            </summary>
            <param name="source">The <see cref="T:System.Collections.IEnumerable"/>.</param>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.TransposedItemsSource.ColumnsChanged">
            <summary>
            Not sure how to best handle the situation when the number of columns changes.
            Testing to raise this event and refresh the ItemsSource binding in the DataGrid.
            Just adding a column would not play nice with explicit columns.
            This way will not be ideal for performance if it changes frequently
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.Count">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#IsFixedSize">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.Gu#Wpf#DataGrid2D#IView2D#Source">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.IsTransposed">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.Gu#Wpf#DataGrid2D#IColumnsChanged#DataGrid">
            <inheritdoc/>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.Source">
            <summary>
            Gets the source collection.
            </summary>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Gu.Wpf.DataGrid2D.TransposedRow"/>.</returns>
        </member>
        <member name="P:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Gu.Wpf.DataGrid2D.TransposedItemsSource"/>.
            </summary>
            <returns>An enumerator for the <see cref="T:Gu.Wpf.DataGrid2D.TransposedItemsSource"/>.</returns>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Add(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Contains(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Clear">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#IndexOf(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Insert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#Remove(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.System#Collections#IList#RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.Dispose(System.Boolean)">
            <summary>
            Disposes of an <see cref="T:Gu.Wpf.DataGrid2D.TransposedItemsSource"/>.
            </summary>
            <remarks>
            Called from Dispose() with disposing=true, and from the finalizer (~TransposedItemsSource) with disposing=false.
            Guidelines:
            1. We may be called more than once: do nothing after the first call.
            2. Avoid throwing exceptions if disposing is false, i.e. if we're being finalized.
            </remarks>
            <param name="disposing">True if called from Dispose(), false if called from the finalizer.</param>
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedItemsSource.ThrowIfDisposed">
            <summary>
            Throws <see cref="T:System.ObjectDisposedException"/> is this instance is disposed.
            </summary>
        </member>
        <member name="T:Gu.Wpf.DataGrid2D.TransposedRow">
            <summary>
            A transposed row.
            </summary>
        </member>
        <member name="E:Gu.Wpf.DataGrid2D.TransposedRow.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedRow.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedRow.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedRow.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedRow.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:Gu.Wpf.DataGrid2D.TransposedRow.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Gu.Wpf.DataGrid2D.TransposedRow.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property.</param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
    </members>
</doc>
